set nocompatible

set backspace=indent,eol,start

set cindent

" Two is good. We'll go with two.
set expandtab
set tabstop=2
set softtabstop=0
set shiftwidth=2
set smarttab

" Make tilde an operator (~w changes the case of a word)
set tildeop

" Search is now interactive!
set incsearch

" Why show mode when we've got vim-airline?
set noshowmode

" Wrapping bad.
set nowrap

" Increment/decrement characters, too!
set nrformats+=alpha

" Well this is nice.
set rnu
set nu

" The futuuuuuuurrreeeeee
set ttyfast

set sidescroll=1

set lazyredraw

set laststatus=2
set encoding=utf-8

set indentkeys-=:

filetype plugin indent on
syntax on

" "Intuitive" splitting
set splitbelow
set splitright

" Let's show a little more when scrolling, eh?
set scrolloff=5

" Let's hope nobody else uses this directory and edits the same files...
"set directory=/tmp
set backupdir=~/.vim_bck//
set directory=~/.vim_tmp//

set autoread

set shiftround

set ttimeout ttimeoutlen=0

let g:netrw_liststyle = 3

" Banners are dumb
let g:netrw_banner = 0

" Open files in a vertical split because it's better that way
let g:netrw_browse_split = 2

let g:netrw_winsize = 10

" Remember last location in file
set viminfo='10,\"100,:20,%,n~/.viminfo'

" All the colors
set t_Co=256

" Dat color scheme
let g:forgotten_dark_LineNr = 'off'
colorscheme forgotten-dark

"colorscheme tender
"let g:tender_airline = 1
"let g:airline_theme = 'tender'

" Easy block movement
nmap <S-k> <S-{>
nmap <S-j> <S-}>
vmap <S-k> <S-{>
vmap <S-j> <S-}>

" Goodbye, help key
noremap  <F1> :set invfullscreen<CR>
inoremap <F1> <ESC>:set invfullscreen<CR>a

vnoremap < <gv
vnoremap > >gv

nnoremap G Gz.

" Make search always center on screen
nmap n nzz
nmap N Nzz

" Set leader
let mapleader = "\<Space>"

" Pasting is so much nicer when formatting is preserved.
set pastetoggle=<F2>
nmap <Leader>p <F2>

" Toggle hlsearch
nmap <Leader>s :set hlsearch!<CR>

" Reload vimrc
map <silent> <Leader>R :source ~/.vim/vimrc<CR>:filetype detect<CR>:exe ":echo 'vimrc reloaded'"<CR>

nnoremap <Leader><Leader> za

" Dat whitespace
autocmd BufWritePre * :%s/\s\+$//e

autocmd BufReadPost *
	\ if line("'\"") > 0 && line("'\"") <= line("$") |
	\   exe "normal! g`\"" |
	\ endif

if has('mouse_sgr')
	set ttymouse=sgr
endif

autocmd BufWritePost *.cpp,*.c,*.h silent exec "!clang-format -i %:p"
autocmd BufWritePost *.go silent exec "!gofmt -w %:p"

" Make Python indenting behave
let g:pyindent_open_paren = '&sw'
let g:pyindent_nested_paren = '&sw'
let g:pyindent_continue = '&sw'

" Machine-specific configs
if filereadable(expand($DOTFILES . "/vim/local_settings.vim"))
  source $DOTFILES/vim/local_settings.vim
endif
